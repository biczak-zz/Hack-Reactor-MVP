'use strict';

var express = require('express');
var app = express();
var path = require('path');
var bodyParser = require('body-parser');
var Team = require('./config.js');
var mongoose = require('mongoose');
var mongodbUri = 'mongodb://demo:demo@ds113871.mlab.com:13871/mvp';

mongoose.connect(mongodbUri);
var db = mongoose.connection;

app.use(bodyParser({ limit: '50mb' })); // to support JSON-encoded bodies
app.use(bodyParser.urlencoded({ // to support URL-encoded bodies
  extended: true
}));

app.use(express.static(path.join(__dirname, '../')));
app.post('/', function (req, res) {
  var userCollection = db.collection('teams');

  userCollection.insertOne({
    "name": req.body.Pokémon
  });
  console.log(req.body.Pokémon + ' has been added to your team!');
});

app.get('/', function (error, response, body) {
  console.log('error:', error); // Print the error if one occurred
  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received
  console.log('body:', body); // Print the HTML for the Google homepage.
});
db.once('open', function () {
  console.log('Mongodb connection open');
});

app.listen(3000, function () {
  console.log('Example app listening on port 3000!');
});

var express = require('express');
var app = express();
var path = require('path');
var bodyParser = require('body-parser');
var MongoClient = require('mongodb').MongoClient;
var db;
var Team = require('./config.js');

app.use(bodyParser.json());

app.get('/', function (req, res) {
  res.sendFile(path.join(__dirname, '../'));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9zZXJ2ZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJhcHAiLCJwYXRoIiwiYm9keVBhcnNlciIsIlRlYW0iLCJtb25nb29zZSIsIm1vbmdvZGJVcmkiLCJjb25uZWN0IiwiZGIiLCJjb25uZWN0aW9uIiwidXNlIiwibGltaXQiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJzdGF0aWMiLCJqb2luIiwiX19kaXJuYW1lIiwicG9zdCIsInJlcSIsInJlcyIsInVzZXJDb2xsZWN0aW9uIiwiY29sbGVjdGlvbiIsImluc2VydE9uZSIsImJvZHkiLCJQb2vDqW1vbiIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJlcnJvciIsInJlc3BvbnNlIiwic3RhdHVzQ29kZSIsIm9uY2UiLCJsaXN0ZW4iLCJNb25nb0NsaWVudCIsImpzb24iLCJzZW5kRmlsZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxVQUFVQyxRQUFRLFNBQVIsQ0FBZDtBQUNBLElBQUlDLE1BQU1GLFNBQVY7QUFDQSxJQUFJRyxPQUFPRixRQUFRLE1BQVIsQ0FBWDtBQUNBLElBQUlHLGFBQWFILFFBQVEsYUFBUixDQUFqQjtBQUNBLElBQUlJLE9BQU9KLFFBQVEsYUFBUixDQUFYO0FBQ0EsSUFBSUssV0FBV0wsUUFBUSxVQUFSLENBQWY7QUFDQSxJQUFJTSxhQUFhLGlEQUFqQjs7QUFFQUQsU0FBU0UsT0FBVCxDQUFpQkQsVUFBakI7QUFDQSxJQUFJRSxLQUFLSCxTQUFTSSxVQUFsQjs7QUFFQVIsSUFBSVMsR0FBSixDQUFTUCxXQUFXLEVBQUNRLE9BQU8sTUFBUixFQUFYLENBQVQsRSxDQUE4QztBQUM5Q1YsSUFBSVMsR0FBSixDQUFRUCxXQUFXUyxVQUFYLENBQXNCLEVBQU07QUFDbENDLFlBQVU7QUFEa0IsQ0FBdEIsQ0FBUjs7QUFJQVosSUFBSVMsR0FBSixDQUFRWCxRQUFRZSxNQUFSLENBQWVaLEtBQUthLElBQUwsQ0FBVUMsU0FBVixFQUFxQixLQUFyQixDQUFmLENBQVI7QUFDQWYsSUFBSWdCLElBQUosQ0FBUyxHQUFULEVBQWMsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CO0FBQy9CLE1BQUlDLGlCQUFpQlosR0FBR2EsVUFBSCxDQUFjLE9BQWQsQ0FBckI7O0FBRUFELGlCQUFlRSxTQUFmLENBQXlCO0FBQ3ZCLFlBQVFKLElBQUlLLElBQUosQ0FBU0M7QUFETSxHQUF6QjtBQUdBQyxVQUFRQyxHQUFSLENBQVlSLElBQUlLLElBQUosQ0FBU0MsT0FBVCxHQUFtQiwrQkFBL0I7QUFDRCxDQVBEOztBQVNBdkIsSUFBSTBCLEdBQUosTUFBYSxVQUFVQyxLQUFWLEVBQWlCQyxRQUFqQixFQUEyQk4sSUFBM0IsRUFBaUM7QUFDNUNFLFVBQVFDLEdBQVIsQ0FBWSxRQUFaLEVBQXNCRSxLQUF0QixFQUQ0QyxDQUNkO0FBQzlCSCxVQUFRQyxHQUFSLENBQVksYUFBWixFQUEyQkcsWUFBWUEsU0FBU0MsVUFBaEQsRUFGNEMsQ0FFaUI7QUFDN0RMLFVBQVFDLEdBQVIsQ0FBWSxPQUFaLEVBQXFCSCxJQUFyQixFQUg0QyxDQUdoQjtBQUU3QixDQUxEO0FBTUFmLEdBQUd1QixJQUFILENBQVEsTUFBUixFQUFnQixZQUFZO0FBQzFCTixVQUFRQyxHQUFSLENBQVkseUJBQVo7QUFDRCxDQUZEOztBQUlBekIsSUFBSStCLE1BQUosQ0FBVyxJQUFYLEVBQWlCLFlBQVk7QUFDM0JQLFVBQVFDLEdBQVIsQ0FBWSxxQ0FBWjtBQUNELENBRkQ7O0FBSUEsSUFBSTNCLFVBQVVDLFFBQVEsU0FBUixDQUFkO0FBQ0EsSUFBSUMsTUFBTUYsU0FBVjtBQUNBLElBQUlHLE9BQU9GLFFBQVEsTUFBUixDQUFYO0FBQ0EsSUFBSUcsYUFBYUgsUUFBUSxhQUFSLENBQWpCO0FBQ0EsSUFBSWlDLGNBQWNqQyxRQUFRLFNBQVIsRUFBbUJpQyxXQUFyQztBQUNBLElBQUl6QixFQUFKO0FBQ0EsSUFBSUosT0FBT0osUUFBUSxhQUFSLENBQVg7O0FBR0FDLElBQUlTLEdBQUosQ0FBUVAsV0FBVytCLElBQVgsRUFBUjs7QUFFQWpDLElBQUkwQixHQUFKLENBQVEsR0FBUixFQUFhLFVBQVNULEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUM5QkEsTUFBSWdCLFFBQUosQ0FBYWpDLEtBQUthLElBQUwsQ0FBVUMsU0FBVixFQUFxQixLQUFyQixDQUFiO0FBQ0QsQ0FGRCIsImZpbGUiOiJzZXJ2ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbnZhciBhcHAgPSBleHByZXNzKCk7XG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbnZhciBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcbnZhciBUZWFtID0gcmVxdWlyZSgnLi9jb25maWcuanMnKTtcbnZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG52YXIgbW9uZ29kYlVyaSA9ICdtb25nb2RiOi8vZGVtbzpkZW1vQGRzMTEzODcxLm1sYWIuY29tOjEzODcxL212cCc7XG5cbm1vbmdvb3NlLmNvbm5lY3QobW9uZ29kYlVyaSk7XG52YXIgZGIgPSBtb25nb29zZS5jb25uZWN0aW9uO1xuXG5hcHAudXNlKCBib2R5UGFyc2VyKHtsaW1pdDogJzUwbWInfSkgKTsgICAgICAgLy8gdG8gc3VwcG9ydCBKU09OLWVuY29kZWQgYm9kaWVzXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ICAgICAvLyB0byBzdXBwb3J0IFVSTC1lbmNvZGVkIGJvZGllc1xuICBleHRlbmRlZDogdHJ1ZVxufSkpO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi8nKSkpO1xuYXBwLnBvc3QoJy8nLCBmdW5jdGlvbihyZXEsIHJlcykge1xuICB2YXIgdXNlckNvbGxlY3Rpb24gPSBkYi5jb2xsZWN0aW9uKCd0ZWFtcycpO1xuXG4gIHVzZXJDb2xsZWN0aW9uLmluc2VydE9uZSh7XG4gICAgXCJuYW1lXCI6IHJlcS5ib2R5LlBva8OpbW9uLFxuICB9KTtcbiAgY29uc29sZS5sb2cocmVxLmJvZHkuUG9rw6ltb24gKyAnIGhhcyBiZWVuIGFkZGVkIHRvIHlvdXIgdGVhbSEnKVxufSk7XG5cbmFwcC5nZXQoYC9gLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3BvbnNlLCBib2R5KSB7XG4gIGNvbnNvbGUubG9nKCdlcnJvcjonLCBlcnJvcik7IC8vIFByaW50IHRoZSBlcnJvciBpZiBvbmUgb2NjdXJyZWRcbiAgY29uc29sZS5sb2coJ3N0YXR1c0NvZGU6JywgcmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3RhdHVzQ29kZSk7IC8vIFByaW50IHRoZSByZXNwb25zZSBzdGF0dXMgY29kZSBpZiBhIHJlc3BvbnNlIHdhcyByZWNlaXZlZFxuICBjb25zb2xlLmxvZygnYm9keTonLCBib2R5KTsgLy8gUHJpbnQgdGhlIEhUTUwgZm9yIHRoZSBHb29nbGUgaG9tZXBhZ2UuXG5cbn0pO1xuZGIub25jZSgnb3BlbicsIGZ1bmN0aW9uICgpIHtcbiAgY29uc29sZS5sb2coJ01vbmdvZGIgY29ubmVjdGlvbiBvcGVuJyk7XG59KTtcblxuYXBwLmxpc3RlbigzMDAwLCBmdW5jdGlvbiAoKSB7XG4gIGNvbnNvbGUubG9nKCdFeGFtcGxlIGFwcCBsaXN0ZW5pbmcgb24gcG9ydCAzMDAwIScpXG59KTtcblxudmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgYXBwID0gZXhwcmVzcygpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG52YXIgTW9uZ29DbGllbnQgPSByZXF1aXJlKCdtb25nb2RiJykuTW9uZ29DbGllbnRcbnZhciBkYjtcbnZhciBUZWFtID0gcmVxdWlyZSgnLi9jb25maWcuanMnKTtcblxuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxuXG5hcHAuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi8nKSk7XG59KTtcbiJdfQ==